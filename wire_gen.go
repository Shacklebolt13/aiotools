// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"aiotools/src/database"
	"aiotools/src/database/model"
	"aiotools/src/handlers"
	"aiotools/src/services"
	"google.golang.org/grpc"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeApp(severOpts []grpc.ServerOption, gormOpts []gorm.Option, conf AppConfig) (ApplicationImpl, error) {
	server := grpc.NewServer(severOpts...)
	dialector := newDialector(conf)
	db, err := gorm.Open(dialector, gormOpts...)
	if err != nil {
		return ApplicationImpl{}, err
	}
	databaseDatabase := database.NewDatabase(db)
	urlBaseRepository := model.NewURLBaseRepository(databaseDatabase)
	shortenService := services.NewShortenService(urlBaseRepository)
	shortenerServiceServer := handlers.NewShortenerServiceHandler(shortenService)
	topicService := services.NewTopicService()
	pubSubServiceServer := handlers.NewPubSubServiceHandler(topicService)
	applicationImpl := NewApplication(server, shortenerServiceServer, pubSubServiceServer, conf)
	return applicationImpl, nil
}

// wire.go:

func newDialector(conf AppConfig) gorm.Dialector {
	return postgres.Open(conf.DSN)
}
